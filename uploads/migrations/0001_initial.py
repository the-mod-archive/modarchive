# Generated by Django 5.1.6 on 2025-06-07 04:47

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('homepage', '0012_alter_profile_create_date'),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[],
            state_operations=[
                migrations.CreateModel(
                name='NewSong',
                fields=[
                    ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                    ('filename', models.CharField(db_index=True, max_length=120)),
                    ('filename_unzipped', models.CharField(max_length=120)),
                    ('title', models.CharField(db_index=True, max_length=120)),
                    ('format', models.CharField(choices=[('669', '669: Composer 669 / UNIS 669'), ('AHX', "AHX: Abyss' Highest eXperience, formerly THX"), ('AMF', 'AMF: ASYLUM / DSMI'), ('AMS', "AMS: Extreme's Tracker / Velvet Studio"), ('C67', 'C67: CDFM / Composer 670'), ('DBM', 'DBM: Digi Booster Pro'), ('DIGI', 'DIGI: Digi Booster'), ('DMF', 'DMF: X-Tracker'), ('DSM', 'DSM: DSIK'), ('DSYM', 'DSYM: Digital Symphony'), ('DTM', 'DTM: Digital Tracker / Digital Home Studio'), ('FAR', 'FAR: Farandole Composer'), ('FMT', 'FMT: FM Tracker'), ('GDM', 'GDM: BWSB Sound System'), ('HVL', 'HVL: HivelyTracker'), ('IMF', 'IMF: Imago Orpheus'), ('IT', 'IT: Impulse Tracker'), ('J2B', 'J2B: Galaxy Sound System'), ('MED', 'MED: Octamed'), ('MDL', 'MDL: Digitrakker'), ('MO3', 'MO3: Compressed Module'), ('MOD', 'MOD: Protracker, Generic MOD'), ('MPTM', 'MPTM: OpenMPT'), ('MT2', 'MT2: MadTracker 2'), ('MTM', 'MTM: Multi Tracker'), ('OKT', 'OKT: Oktalyzer'), ('PLM', 'PLM: Disorder Tracker 2'), ('PSM', 'PSM: Epic MegaGames MASI'), ('PTM', 'PTM: PolyTracker'), ('S3M', 'S3M: Scream Tracker 3'), ('SFX', 'SFX: SoundFX / MultiMedia Sound'), ('STM', 'STM: Scream Tracker'), ('STP', 'STP: SoundTracker Pro II'), ('STX', 'STX: Scream Tracker Music Interface Kit'), ('SymMOD', 'SymMOD: Symphonie / Symphonie Pro'), ('ULT', 'ULT: UltraTracker'), ('UMX', 'UMX: Unreal Music'), ('XM', 'XM: FastTracker 2')], db_index=True, max_length=6)),
                    ('file_size', models.PositiveIntegerField()),
                    ('channels', models.PositiveSmallIntegerField()),
                    ('instrument_text', models.TextField(blank=True, max_length=64000, null=True)),
                    ('comment_text', models.TextField(blank=True, max_length=64000, null=True)),
                    ('hash', models.CharField(max_length=33)),
                    ('pattern_hash', models.CharField(blank=True, max_length=16, null=True)),
                    ('artist_from_file', models.CharField(blank=True, max_length=120, null=True)),
                    ('uploader_ip_address', models.CharField(default='0.0.0.0', max_length=32)),
                    ('is_by_uploader', models.BooleanField()),
                    ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                    ('update_date', models.DateTimeField(auto_now=True)),
                    ('claim_date', models.DateTimeField(blank=True, null=True)),
                    ('flag', models.CharField(blank=True, choices=[('pre-screened', 'Pre-screened'), ('pre-screened+', 'Pre-screened and recommend featured'), ('needs-second-opinion', 'Needs second opinion'), ('possible-duplicate', 'Possible duplicate'), ('under-investigation', 'Under investigation (do not approve)')], max_length=32, null=True)),
                    ('claimed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='claimed_by', to='homepage.profile')),
                    ('flagged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='flagged_by', to='homepage.profile')),
                    ('uploader_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='homepage.profile')),
                ],
                options={
                    'db_table': 'songs_newsong',
                    'permissions': (('can_approve_songs', 'Can approve songs'),),
                },
                ),
                migrations.CreateModel(
                    name='RejectedSong',
                    fields=[
                        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('reason', models.CharField(choices=[('poor-quality', 'Poor quality'), ('already-exists', 'Already exists'), ('too-short', 'Too short'), ('rename-required', 'Rename required'), ('incorrect-file-extension', 'Incorrect file extension'), ('plagiarism', 'Plagiarism'), ('corrupted', 'Corrupted'), ('unsupported-format', 'Unsupported format'), ('custom-message', 'Custom message'), ('test-upload', 'Test upload'), ('dispute', 'Dispute'), ('dubious-content', 'Dubious content'), ('too-big', 'Too big'), ('no-reason-given', 'No reason given'), ('tuning-issues', 'Tuning issues'), ('midi-conversion', 'MIDI conversion'), ('unknown', 'Unknown'), ('other', 'Other')], db_index=True, max_length=32)),
                        ('message', models.TextField(blank=True, max_length=1000)),
                        ('is_temporary', models.BooleanField(db_index=True, default=False)),
                        ('rejected_date', models.DateTimeField(default=django.utils.timezone.now)),
                        ('filename', models.CharField(db_index=True, max_length=120)),
                        ('filename_unzipped', models.CharField(max_length=120)),
                        ('title', models.CharField(blank=True, db_index=True, max_length=120)),
                        ('format', models.CharField(blank=True, choices=[('669', '669: Composer 669 / UNIS 669'), ('AHX', "AHX: Abyss' Highest eXperience, formerly THX"), ('AMF', 'AMF: ASYLUM / DSMI'), ('AMS', "AMS: Extreme's Tracker / Velvet Studio"), ('C67', 'C67: CDFM / Composer 670'), ('DBM', 'DBM: Digi Booster Pro'), ('DIGI', 'DIGI: Digi Booster'), ('DMF', 'DMF: X-Tracker'), ('DSM', 'DSM: DSIK'), ('DSYM', 'DSYM: Digital Symphony'), ('DTM', 'DTM: Digital Tracker / Digital Home Studio'), ('FAR', 'FAR: Farandole Composer'), ('FMT', 'FMT: FM Tracker'), ('GDM', 'GDM: BWSB Sound System'), ('HVL', 'HVL: HivelyTracker'), ('IMF', 'IMF: Imago Orpheus'), ('IT', 'IT: Impulse Tracker'), ('J2B', 'J2B: Galaxy Sound System'), ('MED', 'MED: Octamed'), ('MDL', 'MDL: Digitrakker'), ('MO3', 'MO3: Compressed Module'), ('MOD', 'MOD: Protracker, Generic MOD'), ('MPTM', 'MPTM: OpenMPT'), ('MT2', 'MT2: MadTracker 2'), ('MTM', 'MTM: Multi Tracker'), ('OKT', 'OKT: Oktalyzer'), ('PLM', 'PLM: Disorder Tracker 2'), ('PSM', 'PSM: Epic MegaGames MASI'), ('PTM', 'PTM: PolyTracker'), ('S3M', 'S3M: Scream Tracker 3'), ('SFX', 'SFX: SoundFX / MultiMedia Sound'), ('STM', 'STM: Scream Tracker'), ('STP', 'STP: SoundTracker Pro II'), ('STX', 'STX: Scream Tracker Music Interface Kit'), ('SymMOD', 'SymMOD: Symphonie / Symphonie Pro'), ('ULT', 'ULT: UltraTracker'), ('UMX', 'UMX: Unreal Music'), ('XM', 'XM: FastTracker 2')], db_index=True, max_length=6)),
                        ('file_size', models.PositiveIntegerField(blank=True, null=True)),
                        ('channels', models.PositiveSmallIntegerField(blank=True, null=True)),
                        ('instrument_text', models.TextField(blank=True, max_length=64000)),
                        ('comment_text', models.TextField(blank=True, max_length=64000)),
                        ('hash', models.CharField(max_length=33)),
                        ('pattern_hash', models.CharField(blank=True, max_length=16)),
                        ('artist_from_file', models.CharField(blank=True, max_length=120)),
                        ('uploader_ip_address', models.CharField(blank=True, default='0.0.0.0', max_length=32)),
                        ('is_by_uploader', models.BooleanField()),
                        ('create_date', models.DateTimeField(default=django.utils.timezone.now)),
                        ('update_date', models.DateTimeField(auto_now=True)),
                        ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='screening_rejections', to='homepage.profile')),
                        ('uploader_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rejected_uploads', to='homepage.profile')),
                    ],
                    options={
                        'db_table': 'songs_rejectedsong',
                    },
                ),
            ]
        )
    ]
